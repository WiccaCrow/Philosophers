Философы
Я никогда не думал, что философия будет настолько смертоносной

Резюме: В этом проекте вы изучите основы многопоточности процесса. Вы научитесь делать нитки. Вы обнаружите мьютекс.

______________________________________
______________________________________

СОДЕРЖАНИЕ
I Введение ...............2
II Обязательная часть ....3
III Бонус, часть .........6

______________________________________
______________________________________

Глава I

Вступление

Философия (от греч. Философия, буквально «любовь к мудрости») - это изучение общих и фундаментальных вопросов о существовании, знании, ценностях, разуме, разуме и языке.
Такие вопросы часто формулируются как проблемы, которые необходимо изучить или решить. Этот термин, вероятно, был придуман Пифагором (ок. 570 - 495 г. до н. Э.). Философские методы включают вопросы, критическое обсуждение, рациональную аргументацию и систематическое изложение. К классическим философским вопросам относятся: возможно ли что-нибудь узнать и доказать? Что наиболее реально? Философы также задают более практические и конкретные вопросы, такие как: есть ли лучший способ жить? Лучше быть справедливым или несправедливым (если это может сойти с рук)? Есть ли у людей свобода воли?
Исторически «философия» охватывала любую совокупность знаний. Со времен древнегреческого философа Аристотеля до XIX века «натурфилософия» охватывала астрономию, медицину и физику. Например, «Математические принципы естественной философии» Ньютона 1687 года позже были классифицированы как книга по физике. В XIX веке рост современных исследовательских университетов привел к профессионализации и специализации академической философии и других дисциплин. В современную эпоху некоторые исследования, которые традиционно были частью философии, превратились в отдельные академические дисциплины, включая психологию, социологию, лингвистику и экономику.
Другие исследования, тесно связанные с искусством, наукой, политикой или другими занятиями, оставались частью философии. Например, красота объективна или субъективна? Есть много научных методов или только один? Политическая утопия - это обнадеживающая мечта или безнадежная фантазия?
Основные области академической философии включают метафизику («занимающуюся фундаментальной природой реальности и бытия»), эпистемологию (о «природе и основаниях знания [и] ... его пределы и достоверность »), этика, эстетика, политическая философия, логика и философия науки.


______________________________________
______________________________________

Глава II.

Вам нужно будет написать одну программу для обязательной части и одну для бонусной, но у них будут одинаковые основные правила:

• Этот проект должен быть написан на C в соответствии с Нормой. Любая утечка, сбой, неопределенное поведение или ошибка нормы означают 0 для проекта.
• Один или несколько философов сидят за круглым столом и делают одно из трех: едят, думают или спят.
• Во время еды они не думают и не спят, во время сна они не едят и не думают и, конечно же, когда думают, они не едят и не спят.
• Философы сидят за круглым столом с большой миской спагетти в центре.
• На столе несколько вилок.
• Поскольку спагетти сложно подавать и есть одной вилкой, предполагается, что философ должен есть двумя вилками, по одной на каждую руку.
• Философы никогда не должны голодать.
• Каждому философу нужно есть.
• Философы не разговаривают друг с другом.
• Философы не знают, когда умирает другой философ.
• Каждый раз, когда философ заканчивает есть, он роняет вилки и начинает спать.
• Когда философ поспал, он начнет думать.
• Симуляция останавливается, когда философ умирает.
__________________________________________
• Each program should have the same options:
number_of_philosophers
time_to_die
time_to_eat
time_to_sleep
[number_of_times_each_philosopher_must_eat]
◦ number_of_philosophers: is the number of philosophers and also the number of forks
◦ time_to_die: is in milliseconds, if a philosopher doesn’t start eating ’time_to_die’ milliseconds after starting his last meal or the beginning of the simulation, it dies
◦ time_to_eat: is in milliseconds and is the time it takes for a philosopher to eat. During that time he will need to keep the two forks.
◦ time_to_sleep: is in milliseconds and is the time the philosopher will spend sleeping.
◦ number_of_times_each_philosopher_must_eat: argument is optional, if all philosophers eat at least  ’number_of_times_each_philosopher_must_eat’ the simulation will stop. If not specified, the simulation will stop only at the death of a philosopher.
• Each philosopher should be given a number from 1 to ’number_of_philosophers’.
• Philosopher number 1 is next to philosopher number ’number_of_philosophers’.
Any other philosopher with the number N is seated between philosopher N - 1 and philosopher N + 1
• Any change of status of a philosopher must be written as follows (with X replaced with the philosopher number and timestamp_in_ms the current timestamp in milliseconds)
◦ timestamp_in_ms X has taken a fork
◦ timestamp_in_ms X is eating
◦ timestamp_in_ms X is sleeping
◦ timestamp_in_ms X is thinking
◦ timestamp_in_ms X died
• The status printed should not be scrambled or intertwined with another philosopher’s status.
• You can’t have more than 10 ms between the death of a philosopher and when it will print its death.
• Again, philosophers should avoid dying!
_________________________________________
• В каждой программе должны быть одинаковые параметры:
число_философов
время умирать
время поесть
Пора спать
[number_of_times_each_philosopher_must_eat]
◦ number_of_philosophers: количество философов, а также количество вилок.
◦ time_to_die: в миллисекундах, если философ не начал есть ’time_to_die’ через миллисекунды после его последнего приема пищи или начала симуляции, он умирает
◦ time_to_eat: выражается в миллисекундах и является временем, которое требуется философу, чтобы поесть. В течение этого времени ему нужно будет держать две вилки.
◦ time_to_sleep: указывается в миллисекундах, и это время, которое философ проведет во сне.
◦ number_of_times_each_philosopher_must_eat: аргумент является необязательным, если все философы съедают хотя бы ’number_of_times_each_philosopher_must_eat’, симуляция остановится. Если не указано иное, симуляция остановится только в случае смерти философа.
• Каждому философу следует присвоить число от 1 до «число_философов».
• Философ номер 1 находится рядом с номером философа «number_of_philosophers».
Любой другой философ с числом N находится между философом N - 1 и философом N + 1.
• Любое изменение статуса философа должно быть записано следующим образом (с заменой X номером философа и timestamp_in_ms текущей меткой времени в миллисекундах)
◦ timestamp_in_ms X взял вилку
◦ timestamp_in_ms X ест
◦ timestamp_in_ms X спит
◦ timestamp_in_ms X думает
◦ timestamp_in_ms X умер
• Напечатанный статус не следует путать или переплетать со статусом другого философа.
• Между смертью философа и моментом, когда он напечатает свою смерть, не может быть больше 10 мс.
• Опять же, философы не должны умирать!


_____________________________________________________________________________________
| Название программы    |   philo                                                   |
|_______________________|___________________________________________________________|
| Сдать файлы           |   philo/                                                  |
|_______________________|___________________________________________________________|
| Makefile              |   Да                                                      |
|_______________________|___________________________________________________________|
| Аргументы             |   number_of_philosophers                                  |
|                       |   time_to_die             time_to_eat                     |
|                       |   time_to_sleep                                           |
|                       |   [number_of_times_each_philosopher_must_eat]             |
|_______________________|___________________________________________________________|
| Внешние функции       |   memset,         printf,         malloc,         free,   |
|                       |   write,          usleep,         gettimeofday,           |
|                       |   pthread_create,                 pthread_detach,         |
|                       |   pthread_join,                   pthread_mutex_init,     |
|                       |   pthread_mutex_destroy,          pthread_mutex_lock,     |
|                       |   pthread_mutex_unlock                                    |
|_______________________|___________________________________________________________|
| Libft разрешен        |   Нет                                                     |
|_______________________|___________________________________________________________|
| Описание              |   философ с нитями и мьютексом                            |
|_______________________|___________________________________________________________|

В этой версии особые правила:
• Одна вилка между каждым философом, поэтому, если это несколько философов, будет вилка справа и слева от каждого философа.
• Чтобы философы не дублировали вилки, вы должны защитить состояние вилок мьютексом для каждой из них.
• У каждого философа должна быть нить.
______________________________________
______________________________________
Глава IV.

Бонусы

_________________________________________________________________________________________
| Название программы    |   philo_bonus                                                 |
|_______________________|_______________________________________________________________|
| Сдать файлы           |   philo_bonus/                                                |
|_______________________|_______________________________________________________________|
| Makefile              |   Да                                                          |
|_______________________|_______________________________________________________________|
| Аргументы             |   number_of_philosophers                                      |
|                       |   time_to_die             time_to_eat                         |
|                       |   time_to_sleep                                               |
|                       |   [number_of_times_each_philosopher_must_eat]                 |
|_______________________|_______________________________________________________________|
| Внешние функции       |   memset,         printf,         malloc,         free,       |
|                       |   write,          fork,           kill,           exit        |
|                       |   usleep,         gettimeofday,                               |
|                       |   pthread_create,                 pthread_detach,             |
|                       |   pthread_join,                                               |
|                       |   waitpid,        sem_open,       sem_close,      sem_post,   |
|                       |   sem_wait,       sem_unlink                                  |
|_______________________|_______________________________________________________________|
| Libft разрешен        |   Нет                                                         |
|_______________________|_______________________________________________________________|
| Описание              |   философ с процессами и семафором                            |
|_______________________|_______________________________________________________________|

В этой версии особые правила:
• Все вилки находятся посередине стола.
• У них нет состояний в памяти, но количество доступных вилок представлено семафором.
• Каждый философ должен быть процессом, а главный процесс не должен быть философом.
